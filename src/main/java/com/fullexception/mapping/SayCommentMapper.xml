<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fullexception.mapper.SayCommentMapper" >
  <resultMap id="BaseResultMap" type="com.fullexception.entity.SayComment" >
    <id column="say_comment_id" property="sayCommentId" jdbcType="INTEGER" />
    <result column="say_id" property="sayId" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="DATE" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.fullexception.entity.SayComment" extends="BaseResultMap" >
    <result column="say_comment_content" property="sayCommentContent" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    say_comment_id, say_id, user_id, create_time
  </sql>
  <sql id="Blob_Column_List" >
    say_comment_content
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from say_comment
    where say_comment_id = #{sayCommentId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from say_comment
    where say_comment_id = #{sayCommentId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.fullexception.entity.SayComment" >
    insert into say_comment (say_comment_id, say_id, user_id, 
      create_time, say_comment_content)
    values (#{sayCommentId,jdbcType=INTEGER}, #{sayId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, 
      #{createTime,jdbcType=DATE}, #{sayCommentContent,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.fullexception.entity.SayComment" >
    insert into say_comment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="sayCommentId != null" >
        say_comment_id,
      </if>
      <if test="sayId != null" >
        say_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="sayCommentContent != null" >
        say_comment_content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="sayCommentId != null" >
        #{sayCommentId,jdbcType=INTEGER},
      </if>
      <if test="sayId != null" >
        #{sayId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=DATE},
      </if>
      <if test="sayCommentContent != null" >
        #{sayCommentContent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.fullexception.entity.SayComment" >
    update say_comment
    <set >
      <if test="sayId != null" >
        say_id = #{sayId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=DATE},
      </if>
      <if test="sayCommentContent != null" >
        say_comment_content = #{sayCommentContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where say_comment_id = #{sayCommentId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.fullexception.entity.SayComment" >
    update say_comment
    set say_id = #{sayId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=DATE},
      say_comment_content = #{sayCommentContent,jdbcType=LONGVARCHAR}
    where say_comment_id = #{sayCommentId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fullexception.entity.SayComment" >
    update say_comment
    set say_id = #{sayId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=DATE}
    where say_comment_id = #{sayCommentId,jdbcType=INTEGER}
  </update>
</mapper>