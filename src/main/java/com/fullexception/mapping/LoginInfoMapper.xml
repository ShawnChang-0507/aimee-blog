<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fullexception.mapper.LoginInfoMapper">
  <resultMap id="BaseResultMap" type="com.fullexception.entity.LoginInfo">
    <id column="login_info_id" jdbcType="INTEGER" property="loginInfoId" />
    <result column="visitor_id" jdbcType="INTEGER" property="visitorId" />
    <result column="login_time" jdbcType="TIMESTAMP" property="loginTime" />
    <result column="ip" jdbcType="VARCHAR" property="ip" />
  </resultMap>
  <sql id="Base_Column_List">
    login_info_id, visitor_id, login_time, ip
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from login_info
    where login_info_id = #{loginInfoId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from login_info
    where login_info_id = #{loginInfoId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.fullexception.entity.LoginInfo">
    insert into login_info (login_info_id, visitor_id, login_time, 
      ip)
    values (#{loginInfoId,jdbcType=INTEGER}, #{visitorId,jdbcType=INTEGER}, #{loginTime,jdbcType=TIMESTAMP}, 
      #{ip,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.fullexception.entity.LoginInfo">
    insert into login_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="loginInfoId != null">
        login_info_id,
      </if>
      <if test="visitorId != null">
        visitor_id,
      </if>
      <if test="loginTime != null">
        login_time,
      </if>
      <if test="ip != null">
        ip,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="loginInfoId != null">
        #{loginInfoId,jdbcType=INTEGER},
      </if>
      <if test="visitorId != null">
        #{visitorId,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        #{loginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="ip != null">
        #{ip,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.fullexception.entity.LoginInfo">
    update login_info
    <set>
      <if test="visitorId != null">
        visitor_id = #{visitorId,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        login_time = #{loginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="ip != null">
        ip = #{ip,jdbcType=VARCHAR},
      </if>
    </set>
    where login_info_id = #{loginInfoId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fullexception.entity.LoginInfo">
    update login_info
    set visitor_id = #{visitorId,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=TIMESTAMP},
      ip = #{ip,jdbcType=VARCHAR}
    where login_info_id = #{loginInfoId,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.fullexception.entity.LoginInfo">
    <id column="login_info_id" jdbcType="INTEGER" property="loginInfoId" />
    <result column="level_id" jdbcType="INTEGER" property="levelId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="login_time" jdbcType="DOUBLE" property="loginTime" />
    <result column="last_login_time" jdbcType="DATE" property="lastLoginTime" />
  </resultMap>
  <sql id="Base_Column_List">
    login_info_id, level_id, user_id, login_time, last_login_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from login_info
    where login_info_id = #{loginInfoId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from login_info
    where login_info_id = #{loginInfoId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.fullexception.entity.LoginInfo">
    insert into login_info (login_info_id, level_id, user_id, 
      login_time, last_login_time)
    values (#{loginInfoId,jdbcType=INTEGER}, #{levelId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, 
      #{loginTime,jdbcType=DOUBLE}, #{lastLoginTime,jdbcType=DATE})
  </insert>
  <insert id="insertSelective" parameterType="com.fullexception.entity.LoginInfo">
    insert into login_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="loginInfoId != null">
        login_info_id,
      </if>
      <if test="levelId != null">
        level_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="loginTime != null">
        login_time,
      </if>
      <if test="lastLoginTime != null">
        last_login_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="loginInfoId != null">
        #{loginInfoId,jdbcType=INTEGER},
      </if>
      <if test="levelId != null">
        #{levelId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        #{loginTime,jdbcType=DOUBLE},
      </if>
      <if test="lastLoginTime != null">
        #{lastLoginTime,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.fullexception.entity.LoginInfo">
    update login_info
    <set>
      <if test="levelId != null">
        level_id = #{levelId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="loginTime != null">
        login_time = #{loginTime,jdbcType=DOUBLE},
      </if>
      <if test="lastLoginTime != null">
        last_login_time = #{lastLoginTime,jdbcType=DATE},
      </if>
    </set>
    where login_info_id = #{loginInfoId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fullexception.entity.LoginInfo">
    update login_info
    set level_id = #{levelId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=DOUBLE},
      last_login_time = #{lastLoginTime,jdbcType=DATE}
    where login_info_id = #{loginInfoId,jdbcType=INTEGER}
  </update>
</mapper>