<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fullexception.mapper.ArticleMapper" >
  <resultMap id="BaseResultMap" type="com.fullexception.entity.Article" >
    <id column="article_id" property="articleId" jdbcType="INTEGER" />
    <result column="host_id" property="hostId" jdbcType="INTEGER" />
    <result column="source_id" property="sourceId" jdbcType="INTEGER" />
    <result column="article_group_id" property="articleGroupId" jdbcType="INTEGER" />
    <result column="parent_article_id" property="parentArticleId" jdbcType="INTEGER" />
    <result column="article_title" property="articleTitle" jdbcType="VARCHAR" />
    <result column="article_content" property="articleContent" jdbcType="VARCHAR" />
    <result column="create_date" property="createDate" jdbcType="DATE" />
    <result column="weather" property="weather" jdbcType="VARCHAR" />
    <result column="article_state" property="articleState" jdbcType="INTEGER" />
    <result column="public_or_private" property="publicOrPrivate" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    article_id, host_id, source_id, article_group_id, parent_article_id, article_title, 
    article_content, create_date, weather, article_state, public_or_private
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from article
    where article_id = #{articleId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from article
    where article_id = #{articleId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.fullexception.entity.Article" >
    insert into article (article_id, host_id, source_id, 
      article_group_id, parent_article_id, article_title, 
      article_content, create_date, weather, 
      article_state, public_or_private)
    values (#{articleId,jdbcType=INTEGER}, #{hostId,jdbcType=INTEGER}, #{sourceId,jdbcType=INTEGER}, 
      #{articleGroupId,jdbcType=INTEGER}, #{parentArticleId,jdbcType=INTEGER}, #{articleTitle,jdbcType=VARCHAR}, 
      #{articleContent,jdbcType=VARCHAR}, #{createDate,jdbcType=DATE}, #{weather,jdbcType=VARCHAR}, 
      #{articleState,jdbcType=INTEGER}, #{publicOrPrivate,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.fullexception.entity.Article" >
    insert into article
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="articleId != null" >
        article_id,
      </if>
      <if test="hostId != null" >
        host_id,
      </if>
      <if test="sourceId != null" >
        source_id,
      </if>
      <if test="articleGroupId != null" >
        article_group_id,
      </if>
      <if test="parentArticleId != null" >
        parent_article_id,
      </if>
      <if test="articleTitle != null" >
        article_title,
      </if>
      <if test="articleContent != null" >
        article_content,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="weather != null" >
        weather,
      </if>
      <if test="articleState != null" >
        article_state,
      </if>
      <if test="publicOrPrivate != null" >
        public_or_private,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="articleId != null" >
        #{articleId,jdbcType=INTEGER},
      </if>
      <if test="hostId != null" >
        #{hostId,jdbcType=INTEGER},
      </if>
      <if test="sourceId != null" >
        #{sourceId,jdbcType=INTEGER},
      </if>
      <if test="articleGroupId != null" >
        #{articleGroupId,jdbcType=INTEGER},
      </if>
      <if test="parentArticleId != null" >
        #{parentArticleId,jdbcType=INTEGER},
      </if>
      <if test="articleTitle != null" >
        #{articleTitle,jdbcType=VARCHAR},
      </if>
      <if test="articleContent != null" >
        #{articleContent,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=DATE},
      </if>
      <if test="weather != null" >
        #{weather,jdbcType=VARCHAR},
      </if>
      <if test="articleState != null" >
        #{articleState,jdbcType=INTEGER},
      </if>
      <if test="publicOrPrivate != null" >
        #{publicOrPrivate,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.fullexception.entity.Article" >
    update article
    <set >
      <if test="hostId != null" >
        host_id = #{hostId,jdbcType=INTEGER},
      </if>
      <if test="sourceId != null" >
        source_id = #{sourceId,jdbcType=INTEGER},
      </if>
      <if test="articleGroupId != null" >
        article_group_id = #{articleGroupId,jdbcType=INTEGER},
      </if>
      <if test="parentArticleId != null" >
        parent_article_id = #{parentArticleId,jdbcType=INTEGER},
      </if>
      <if test="articleTitle != null" >
        article_title = #{articleTitle,jdbcType=VARCHAR},
      </if>
      <if test="articleContent != null" >
        article_content = #{articleContent,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=DATE},
      </if>
      <if test="weather != null" >
        weather = #{weather,jdbcType=VARCHAR},
      </if>
      <if test="articleState != null" >
        article_state = #{articleState,jdbcType=INTEGER},
      </if>
      <if test="publicOrPrivate != null" >
        public_or_private = #{publicOrPrivate,jdbcType=INTEGER},
      </if>
    </set>
    where article_id = #{articleId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fullexception.entity.Article" >
    update article
    set host_id = #{hostId,jdbcType=INTEGER},
      source_id = #{sourceId,jdbcType=INTEGER},
      article_group_id = #{articleGroupId,jdbcType=INTEGER},
      parent_article_id = #{parentArticleId,jdbcType=INTEGER},
      article_title = #{articleTitle,jdbcType=VARCHAR},
      article_content = #{articleContent,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=DATE},
      weather = #{weather,jdbcType=VARCHAR},
      article_state = #{articleState,jdbcType=INTEGER},
      public_or_private = #{publicOrPrivate,jdbcType=INTEGER}
    where article_id = #{articleId,jdbcType=INTEGER}
  </update>
</mapper>