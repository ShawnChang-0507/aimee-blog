<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fullexception.mapper.UserMapper" >
  <resultMap id="BaseResultMap" type="com.fullexception.entity.User" >
    <id column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="star_id" property="starId" jdbcType="INTEGER" />
    <result column="login_name" property="loginName" jdbcType="VARCHAR" />
    <result column="login_password" property="loginPassword" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="DATE" />
    <result column="nick_name" property="nickName" jdbcType="VARCHAR" />
    <result column="user_state" property="userState" jdbcType="INTEGER" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="second_title" property="secondTitle" jdbcType="VARCHAR" />
    <result column="public_or_private" property="publicOrPrivate" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    user_id, star_id, login_name, login_password, create_time, nick_name, user_state, 
    title, second_title, public_or_private
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.fullexception.entity.User" >
    insert into user (user_id, star_id, login_name, 
      login_password, create_time, nick_name, 
      user_state, title, second_title, 
      public_or_private)
    values (#{userId,jdbcType=INTEGER}, #{starId,jdbcType=INTEGER}, #{loginName,jdbcType=VARCHAR}, 
      #{loginPassword,jdbcType=VARCHAR}, #{createTime,jdbcType=DATE}, #{nickName,jdbcType=VARCHAR}, 
      #{userState,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{secondTitle,jdbcType=VARCHAR}, 
      #{publicOrPrivate,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.fullexception.entity.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="starId != null" >
        star_id,
      </if>
      <if test="loginName != null" >
        login_name,
      </if>
      <if test="loginPassword != null" >
        login_password,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="nickName != null" >
        nick_name,
      </if>
      <if test="userState != null" >
        user_state,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="secondTitle != null" >
        second_title,
      </if>
      <if test="publicOrPrivate != null" >
        public_or_private,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="starId != null" >
        #{starId,jdbcType=INTEGER},
      </if>
      <if test="loginName != null" >
        #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="loginPassword != null" >
        #{loginPassword,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=DATE},
      </if>
      <if test="nickName != null" >
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="userState != null" >
        #{userState,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="secondTitle != null" >
        #{secondTitle,jdbcType=VARCHAR},
      </if>
      <if test="publicOrPrivate != null" >
        #{publicOrPrivate,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.fullexception.entity.User" >
    update user
    <set >
      <if test="starId != null" >
        star_id = #{starId,jdbcType=INTEGER},
      </if>
      <if test="loginName != null" >
        login_name = #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="loginPassword != null" >
        login_password = #{loginPassword,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=DATE},
      </if>
      <if test="nickName != null" >
        nick_name = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="userState != null" >
        user_state = #{userState,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="secondTitle != null" >
        second_title = #{secondTitle,jdbcType=VARCHAR},
      </if>
      <if test="publicOrPrivate != null" >
        public_or_private = #{publicOrPrivate,jdbcType=INTEGER},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fullexception.entity.User" >
    update user
    set star_id = #{starId,jdbcType=INTEGER},
      login_name = #{loginName,jdbcType=VARCHAR},
      login_password = #{loginPassword,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=DATE},
      nick_name = #{nickName,jdbcType=VARCHAR},
      user_state = #{userState,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      second_title = #{secondTitle,jdbcType=VARCHAR},
      public_or_private = #{publicOrPrivate,jdbcType=INTEGER}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
</mapper>