<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fullexception.mapper.SayMapper" >
  <resultMap id="BaseResultMap" type="com.fullexception.entity.Say" >
    <id column="say_id" property="sayId" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="source_id" property="sourceId" jdbcType="INTEGER" />
    <result column="parent_id" property="parentId" jdbcType="INTEGER" />
    <result column="say_name" property="sayName" jdbcType="VARCHAR" />
    <result column="create_date" property="createDate" jdbcType="DATE" />
    <result column="say_position" property="sayPosition" jdbcType="VARCHAR" />
    <result column="say_weather" property="sayWeather" jdbcType="VARCHAR" />
    <result column="say_state" property="sayState" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.fullexception.entity.Say" extends="BaseResultMap" >
    <result column="say_content" property="sayContent" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    say_id, user_id, source_id, parent_id, say_name, create_date, say_position, say_weather, 
    say_state
  </sql>
  <sql id="Blob_Column_List" >
    say_content
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from say
    where say_id = #{sayId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from say
    where say_id = #{sayId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.fullexception.entity.Say" >
    insert into say (say_id, user_id, source_id, 
      parent_id, say_name, create_date, 
      say_position, say_weather, say_state, 
      say_content)
    values (#{sayId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{sourceId,jdbcType=INTEGER}, 
      #{parentId,jdbcType=INTEGER}, #{sayName,jdbcType=VARCHAR}, #{createDate,jdbcType=DATE}, 
      #{sayPosition,jdbcType=VARCHAR}, #{sayWeather,jdbcType=VARCHAR}, #{sayState,jdbcType=INTEGER}, 
      #{sayContent,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.fullexception.entity.Say" >
    insert into say
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="sayId != null" >
        say_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="sourceId != null" >
        source_id,
      </if>
      <if test="parentId != null" >
        parent_id,
      </if>
      <if test="sayName != null" >
        say_name,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="sayPosition != null" >
        say_position,
      </if>
      <if test="sayWeather != null" >
        say_weather,
      </if>
      <if test="sayState != null" >
        say_state,
      </if>
      <if test="sayContent != null" >
        say_content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="sayId != null" >
        #{sayId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="sourceId != null" >
        #{sourceId,jdbcType=INTEGER},
      </if>
      <if test="parentId != null" >
        #{parentId,jdbcType=INTEGER},
      </if>
      <if test="sayName != null" >
        #{sayName,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=DATE},
      </if>
      <if test="sayPosition != null" >
        #{sayPosition,jdbcType=VARCHAR},
      </if>
      <if test="sayWeather != null" >
        #{sayWeather,jdbcType=VARCHAR},
      </if>
      <if test="sayState != null" >
        #{sayState,jdbcType=INTEGER},
      </if>
      <if test="sayContent != null" >
        #{sayContent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.fullexception.entity.Say" >
    update say
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="sourceId != null" >
        source_id = #{sourceId,jdbcType=INTEGER},
      </if>
      <if test="parentId != null" >
        parent_id = #{parentId,jdbcType=INTEGER},
      </if>
      <if test="sayName != null" >
        say_name = #{sayName,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=DATE},
      </if>
      <if test="sayPosition != null" >
        say_position = #{sayPosition,jdbcType=VARCHAR},
      </if>
      <if test="sayWeather != null" >
        say_weather = #{sayWeather,jdbcType=VARCHAR},
      </if>
      <if test="sayState != null" >
        say_state = #{sayState,jdbcType=INTEGER},
      </if>
      <if test="sayContent != null" >
        say_content = #{sayContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where say_id = #{sayId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.fullexception.entity.Say" >
    update say
    set user_id = #{userId,jdbcType=INTEGER},
      source_id = #{sourceId,jdbcType=INTEGER},
      parent_id = #{parentId,jdbcType=INTEGER},
      say_name = #{sayName,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=DATE},
      say_position = #{sayPosition,jdbcType=VARCHAR},
      say_weather = #{sayWeather,jdbcType=VARCHAR},
      say_state = #{sayState,jdbcType=INTEGER},
      say_content = #{sayContent,jdbcType=LONGVARCHAR}
    where say_id = #{sayId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fullexception.entity.Say" >
    update say
    set user_id = #{userId,jdbcType=INTEGER},
      source_id = #{sourceId,jdbcType=INTEGER},
      parent_id = #{parentId,jdbcType=INTEGER},
      say_name = #{sayName,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=DATE},
      say_position = #{sayPosition,jdbcType=VARCHAR},
      say_weather = #{sayWeather,jdbcType=VARCHAR},
      say_state = #{sayState,jdbcType=INTEGER}
    where say_id = #{sayId,jdbcType=INTEGER}
  </update>
</mapper>